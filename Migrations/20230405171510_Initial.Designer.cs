// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NewsWise.Models;

#nullable disable

namespace NewsWise.Migrations
{
    [DbContext(typeof(NewswiseDbContext))]
    [Migration("20230405171510_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NewsWise.Models.Claim", b =>
                {
                    b.Property<int>("ClaimId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClaimId"));

                    b.Property<DateTime>("ClaimDate")
                        .HasColumnType("datetime");

                    b.Property<int>("ClaimantId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClaimId");

                    b.HasIndex("ClaimantId");

                    b.ToTable("Claims");
                });

            modelBuilder.Entity("NewsWise.Models.Claim_Review", b =>
                {
                    b.Property<string>("Claim_ReviewId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ClaimId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ClaimId1")
                        .HasColumnType("int");

                    b.Property<DateTime>("Review_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Review_PublisherId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Review_PublisherId1")
                        .HasColumnType("int");

                    b.Property<string>("Textual_Rating")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Claim_ReviewId");

                    b.HasIndex("ClaimId1");

                    b.HasIndex("Review_PublisherId1");

                    b.ToTable("Review");
                });

            modelBuilder.Entity("NewsWise.Models.Claimant", b =>
                {
                    b.Property<int>("ClaimantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClaimantId"));

                    b.Property<string>("ClaimantName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClaimantId");

                    b.ToTable("Claimants");
                });

            modelBuilder.Entity("NewsWise.Models.Review_Publisher", b =>
                {
                    b.Property<int>("Review_PublisherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Review_PublisherId"));

                    b.Property<string>("Publisher")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Site")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Review_PublisherId");

                    b.ToTable("ReviewPublisher");
                });

            modelBuilder.Entity("NewsWise.Models.Claim", b =>
                {
                    b.HasOne("NewsWise.Models.Claimant", "Claimant")
                        .WithMany("Claims")
                        .HasForeignKey("ClaimantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Claimant");
                });

            modelBuilder.Entity("NewsWise.Models.Claim_Review", b =>
                {
                    b.HasOne("NewsWise.Models.Claim", null)
                        .WithMany("Claim_Reviews")
                        .HasForeignKey("ClaimId1");

                    b.HasOne("NewsWise.Models.Review_Publisher", null)
                        .WithMany("Claim_Reviews")
                        .HasForeignKey("Review_PublisherId1");
                });

            modelBuilder.Entity("NewsWise.Models.Claim", b =>
                {
                    b.Navigation("Claim_Reviews");
                });

            modelBuilder.Entity("NewsWise.Models.Claimant", b =>
                {
                    b.Navigation("Claims");
                });

            modelBuilder.Entity("NewsWise.Models.Review_Publisher", b =>
                {
                    b.Navigation("Claim_Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
