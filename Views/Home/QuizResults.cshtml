@model dynamic
@{
    ViewData["Title"] = "Your Quiz Results";
}
<style>
    body {
        background-color: black;
    }

    .aboutLearn {
        font-family: 'Poppins-Medium';
        font-size: 11px;
        color: #B3B3B3;
    }

    .aTopic {
        position: relative;
        left: 140px;
    }

    .AboutTitle {
        font-family: 'Poppins-semibold';
        color: #FFBB00;
        margin-top: -20px;
    }

    .Back {
        color:  #708090;
        font-size: 14px;
        font-family: 'Roboto-medium';
        position: relative;
        left: 50px;
    }

    .aContent {
        font-family: Roboto-regular;

    }
    .QuizR{
        font-family:Poppins-medium;
        background-image: url('../Image/QuizStart1.png');
        background-size: cover;
    }
    .Nav {
        color: #708090;
        font-size: 14px;
        font-family: 'Roboto-medium';
    }

    .AnswerQ {
        font-family: 'Poppins-semibold';
        background: linear-gradient(180deg, #FFBB00 0%, #F2A60C 100%);
        border: 0px solid;
        position: relative;
        right: 20px;
    }
    .QpageNavItem{
        margin-right:10px;
        margin-left:10px;
        border-radius: 4px;
        background-color: #D9D9D9;
    }

    .QpageNavItem:hover {

        background: linear-gradient(180deg, #FFBB00 0%, #F2A60C 100%);
    }

    .QpageNavItem:focus {
            background: linear-gradient(180deg, #FFBB00 0%, #F2A60C 100%);
     }


    .checkbox1{
        border:0px solid;
        position: relative;
        color:black;
        background-color: #D9D9D9;

    }
    .checkbox1:hover {
        background: linear-gradient(180deg, #FFBB00 0%, #F2A60C 100%);
    }

    .QuestionType{
        font-size:30px;
    }

    .QTitle{
        position:relative;
        font-family:Poppins-Semibold;
    }
    .Qsig{
        color: #FFBB00;
    }

    .Feedback{
        font-family:Roboto-regular;
    }
    .FindArticle{
        font-family:Poppins-semibold;
        position:relative;
        right: 20px;
        color:white;
        border: 0px solid;
        background: linear-gradient(180deg, #FFBB00 0%, #F2A60C 100%);
        border-radius:40px;
    }
    .feedB{
        position:relative;
        left: 20px;
    }
    input:checked + label {
        background: linear-gradient(180deg, #FFBB00 0%, #F2A60C 100%);
    }
    

</style>
<body>
<div class="AboutContent body-content p-1 bg-black" style="margin-top:-23px;margin-left:-15px;margin-right:120px;">
    <br />
    <div class="aTopic">
        <p class="aboutLearn">Do a</p>
        <h2 class="AboutTitle">Quiz.</h2>
    </div>
    <br />
   
</div>

<div class="aContent  p-2 " style="background-color:#D9D9D9" align=center>
     <div class="Back" align=left>
        <br/>
        <p>
            <a class="Nav" asp-area="" asp-controller="Home" asp-action="Index">Home</a>  >  <a class="Nav" asp-area="" asp-controller="Home" asp-action="Quiz">Quiz</a>
        </p >
    </div>
    <div class=" QuizR col-sm-10 bg-white" >
        <br />
        <br />
            <br />
            <br />
            <br />
            <br />
            <br />
            <br />
            <br />
            <br />
        <div class="Res col-sm-6" align="left" style=" margin-right:30px;">
        <p class="ResultTitle">You've Got:</p>
            <h1 class="ResultScore"  align=left><span style="color:#FFBB00">@Model.Score</span> out of 8.</h1>
        <br/>
        <div class="col-sm-6" align=left>
            <svg id="chart"  style="margin-left:-10px"></svg>
        </div>
        <p class="feedB" align="justify" style="margin-right:40px">
            Feedback:
            <span class="Feedback">@Html.Raw(@Model.Feedback)</span>
        </p>
        <br />
        <form method="get" action="@Model.SuggestedPage">
                <div >
                 <button class="FindArticle p-2" style="margin-left:30px;" type="submit">@Model.SuggestedText</button>
            </div>
        </form>
        <br />
        <br />
        <br />
            <br />
            <br />
            <br />
                <br />
                
               
        </div>
        <br />
        <br />
        <br />
        <br />
       
    </div>
        <br />
        <br />
        <br />
</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.4.11/d3.min.js"></script>
<script>
    var mark = @Model.Score;
    var mark1=mark;
    mark=12.5*mark;
    var percent = [100 - mark, mark];

    var width = 460,
        height = 300,
        radius = Math.min(width, height) / 2;

    var color = ["#FFFFFF", "#FFBB00"];

    var pie = d3.layout.pie()
        .sort(null);

    var arc = d3.svg.arc()
        .innerRadius(radius - 100)
        .outerRadius(radius - 50);

    var svg = d3.select("#chart")
        .attr("width", width)
        .attr("height", height)
        .append("g")
        .attr("transform", "translate(" + width / 2 + "," + height / 2 + ")");

    var path = svg.selectAll("path")
        .data(pie(percent))
        .enter()
        .append("path")
        .attr("fill", (d, i) => color[i])
        .attr("d", arc)
        .transition()
        .duration(1000)
        .attrTween("d", function (d) {
            var i = d3.interpolate(d.endAngle, d.startAngle);
            return function (t) {
                d.startAngle = i(t);
                return arc(d);
            }
        });

    var show_mark = svg.selectAll("text")
        .data(percent.filter(function (d, i) {
            return i == 0;
        }))
        .enter()
        .append("text")
        .attr("text-anchor", "middle")
        .attr("fill", "#000000")
        .attr("font-family", "sans-serif")
        .style("font-size", "1.3em")
        .transition()
        .delay(1000)
            .text(function (d) { return mark1 + '/8'; })
</script>
</body>